{
  "openapi": "3.0.1",
  "info": {
    "title": "My API",
    "version": "v1"
  },
  "paths": {
    "/api/Entities/getPerson/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Entities/createPerson": {
      "post": {
        "tags": [
          "Entities"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/Entities/updatePerson": {
      "put": {
        "tags": [
          "Entities"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Entities/link": {
      "put": {
        "tags": [
          "Entities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "relationship",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Entities/{id}": {
      "delete": {
        "tags": [
          "Entities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Entities/Company/{id}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/api/Entities/Mims": {
      "post": {
        "tags": [
          "Entities"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MimsPackage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MimsPackage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MimsPackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringMimsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMimsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMimsResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Entities/MyGeneric": {
      "post": {
        "tags": [
          "Entities"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDecimalDoubleMyGeneric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDecimalDoubleMyGeneric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringDecimalDoubleMyGeneric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringDecimalDoubleMyGeneric"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDecimalDoubleMyGeneric"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDecimalDoubleMyGeneric"
                }
              }
            }
          }
        }
      }
    },
    "/api/Entities/MyGenericPerson": {
      "post": {
        "tags": [
          "Entities"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDecimalPersonMyGeneric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDecimalPersonMyGeneric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringDecimalPersonMyGeneric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringDecimalPersonMyGeneric"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDecimalPersonMyGeneric"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDecimalPersonMyGeneric"
                }
              }
            }
          }
        }
      }
    },
    "/api/Heroes": {
      "get": {
        "tags": [
          "Heroes"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hero"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hero"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hero"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Heroes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Heroes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hero"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Hero"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Hero"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              }
            }
          }
        }
      }
    },
    "/api/Heroes/{id}": {
      "get": {
        "tags": [
          "Heroes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Heroes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Heroes/q": {
      "post": {
        "tags": [
          "Heroes"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hero"
                }
              }
            }
          }
        }
      }
    },
    "/api/Heroes/search/{name}": {
      "get": {
        "tags": [
          "Heroes"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hero"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hero"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hero"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SpecialTypes/AnonymousDynamic": {
      "get": {
        "tags": [
          "SpecialTypes"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SpecialTypes/AnonymousObject": {
      "get": {
        "tags": [
          "SpecialTypes"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "SpecialTypes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SuperDemo/int/{d}": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "d",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/decimal/{d}": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "d",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NullableDatetime/{hasValue}": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "hasValue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NextYear/{dt}": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "dt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NextHour/{dt}": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "dt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NextYear": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/DateTimeOffset": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/DateTimeOffsetNullable": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NullableDecimal/{hasValue}": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "hasValue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/FloatZero": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/DoubleZero": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/DecimalZero": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NullString": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/EmptyString": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NullObject": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/TextStream": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SuperDemo/ByteArray": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/ActionResult": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SuperDemo/PostActionResult2": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SuperDemo/PostActionResult3": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SuperDemo/ActionStringResult": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/byte": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/sbyte": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/short": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/ushort": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/uint": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/ulong": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/doulbe": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/decimal": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/char": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/bool": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/int2d": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/int2dJagged": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/int2djagged": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/intArray": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/StringStringDic": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/StringPersonDic": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/KeyValuePair": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringPersonKeyValuePair"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/ICollection": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/IList": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/IReadOnlyList": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/IReadOnlyCollection": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/List": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/Collection": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/PostEmpty/{i}": {
      "post": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "i",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringInt32Tuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/DoubleNullable": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dd",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "de",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDoubleNullableDecimalNullableTuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/DoubleNullable2": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "dd",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "de",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoubleNullableDecimalNullableTuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NextYearNullable": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "n",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/NextHourNullable": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "n",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/SuperDemo/SearchDateRange": {
      "get": {
        "tags": [
          "SuperDemo"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateTimeNullableDateTimeNullableTuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PersonCompany1": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany2": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany3": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany4": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPersonPersonCompanyTuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPersonPersonCompanyTuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPersonPersonCompanyTuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany5": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPersonPersonPersonCompanyTuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPersonPersonPersonCompanyTuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonPersonPersonPersonCompanyTuple"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany6": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany7": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonPersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonPersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonPersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/PeopleCompany8": {
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonPersonPersonCompanyTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonPersonPersonCompanyTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonPersonPersonPersonPersonPersonPersonCompanyTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple1": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Int32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Int32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Int32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple2": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringInt32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringInt32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringInt32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringInt32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringInt32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringInt32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple3": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringInt32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringInt32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringInt32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringInt32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringInt32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringInt32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple4": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringInt32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringInt32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringInt32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringInt32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringInt32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringInt32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple5": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringInt32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringInt32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringInt32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringInt32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringInt32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringInt32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple6": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringInt32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringInt32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringInt32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringInt32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringInt32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringInt32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple7": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringInt64Int32Tuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringInt64Int32Tuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringInt64Int32Tuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringInt64Int32Tuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringInt64Int32Tuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringInt64Int32Tuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tuple/Tuple8": {
      "get": {
        "tags": [
          "Tuple"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringStringInt32StringStringStringTupleTuple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringStringInt32StringStringStringTupleTuple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringStringStringStringStringStringInt32StringStringStringTupleTuple"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuple"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringStringStringStringStringStringTupleTuple"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringStringStringStringStringStringTupleTuple"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringStringStringStringStringStringStringStringStringStringTupleTuple"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Values": {
      "get": {
        "tags": [
          "Values"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Values"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Values/{id}": {
      "get": {
        "tags": [
          "Values"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Values"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Values"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PhoneType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fullNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ]
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Entity": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          },
          "web": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Point": {
        "type": "object",
        "properties": {
          "isEmpty": {
            "type": "boolean",
            "readOnly": true
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Entity"
              }
            ],
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          },
          "street1": {
            "type": "string",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ]
          },
          "geoLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Point"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Person": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "surname": {
            "type": "string",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          },
          "web": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Company": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "businessNumber": {
            "type": "string",
            "nullable": true
          },
          "businessNumberType": {
            "type": "string",
            "nullable": true
          },
          "textMatrix": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          },
          "web": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecimalMimsResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "number",
            "format": "double"
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MimsPackage": {
        "type": "object",
        "properties": {
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecimalMimsResult"
              }
            ],
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringMimsResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringDecimalDoubleMyGeneric": {
        "type": "object",
        "properties": {
          "myT": {
            "type": "string",
            "nullable": true
          },
          "myK": {
            "type": "number",
            "format": "double"
          },
          "myU": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringDecimalPersonMyGeneric": {
        "type": "object",
        "properties": {
          "myT": {
            "type": "string",
            "nullable": true
          },
          "myK": {
            "type": "number",
            "format": "double"
          },
          "myU": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Hero": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringPersonKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringInt32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringDoubleNullableDecimalNullableTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DoubleNullableDecimalNullableTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DateTimeNullableDateTimeNullableTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPersonPersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPersonPersonPersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPersonPersonPersonPersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPersonPersonPersonPersonPersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item7": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PersonPersonPersonPersonPersonPersonPersonCompanyTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "item7": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "rest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Int32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringInt32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringInt32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringStringInt32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringStringStringInt32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringStringStringInt64Int32Tuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "item7": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringStringStringStringInt32StringStringStringTupleTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item7": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "rest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringStringStringTuple"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StringStringStringStringStringStringStringStringStringStringTupleTuple": {
        "type": "object",
        "properties": {
          "item1": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item2": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item3": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item4": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item5": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item6": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "item7": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringStringStringTuple"
              }
            ],
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}